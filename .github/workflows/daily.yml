name: Daily Build Meson Multi-Platform

on:
  schedule:
    - cron: '0 0 * * *'  # daily at 00:00 UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux targets
          - os: ubuntu-latest
            arch: x86_64
          - os: ubuntu-latest
            arch: i686
          - os: ubuntu-latest
            arch: arm64
          # macOS targets
          - os: macos-latest
            arch: x86_64
          - os: macos-latest
            arch: arm64
          # Windows targets
          - os: windows-latest
            arch: x86_64
          - os: windows-latest
            arch: i686
          - os: windows-latest
            arch: arm64
    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y build-essential meson ninja-build python3-pip xz-utils libreadline-dev gcc-multilib g++-multilib \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install meson ninja xz readline

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install meson -y
          choco install ninja -y
          choco install xz -y
          choco install readline -y || echo "readline may not be available on Windows"

      - name: Configure build
        run: |
          mkdir -p build
          meson setup build --buildtype release -Dreadline=true

      - name: Build
        run: |
          meson compile -C build

      - name: Package
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          TODAY=$(date +%Y%m%d)
          TARGET="${{ matrix.os }}-${{ matrix.arch }}"
          mkdir -p dist
          tar -cJf dist/kzsh-${LATEST_TAG}-${TODAY}-${TARGET}.tar.xz -C build .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: kzsh-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/kzsh-*.tar.xz
